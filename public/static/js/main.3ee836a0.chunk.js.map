{"version":3,"sources":["components/StockCard.js","components/SearchStockCard.js","components/Query.js","components/StockFeed.js","components/Login.js","components/SignUp.js","components/Chart.js","components/UserStockCard.js","components/UserPortfolio.js","components/Navbar.js","components/CompaniesCard.js","components/MyCompaniesPage.js","components/App.js","index.js"],"names":["StockCard","stock","currentUser","userStocks","setError","setUserStocks","DisplayName","Symbol","LastValue","useState","company","setCompany","useEffect","newCompany","name","symbol","fetch","method","headers","body","JSON","stringify","then","r","json","className","onClick","window","alert","newStock","price","company_id","id","user_id","console","log","SearchStockCard","searchResponse","Name","LastPrice","setNewCompany","noDollarSign","slice","newPrice","replaceAll","formattedPrice","parseFloat","newSearchCompany","Query","search","setSearch","setSearchResponse","onSubmit","e","preventDefault","process","response","QuoteOutput","catch","err","error","type","placeholder","onChange","target","value","StockFeed","stocks","setStocks","news","setNews","TopMentionsApiData","singleStock","map","Headline","Timestamp","Teaser","Login","setCurrentUser","user","setUser","password","setPassword","history","useHistory","username","data","setInterval","push","SignUp","signUpUsername","setSignUpUsername","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","signUpError","setSingUpError","email","errors","Chart","values2","keys","setData","date","close","renderLineChart","LineChart","width","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","UserStockCard","handleDeleteStock","showChart","setShowChart","setFetchData","updatedPrice","setUpdatedPrice","setSingleStock","showForm","setShowForm","updateError","setUpdateError","values","setValues","setKeys","currentPrice","setCurrentPrice","performanceOverTime","templateParams","to_name","performance","toFixed","objValues","Object","updatedStock","updatedStocks","defaultValue","length","emailjs","send","result","text","UserPortfolio","filter","user_stocks","Navbar","checkUser","to","ok","CompaniesCard","quoteNews","setQuoteNews","showSummary","setShowSummary","showCompanyNews","setShowCompanyNews","CompanyOverviewOutput","BusinessSummary","StocksNewsOutput","Stories","MyCompaniesPage","userCompanies","setUserCompanies","companies","singleCompany","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ee836a0.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nfunction StockCard ({stock, currentUser, setError, userStocks, setUserStocks}) {\n    const {DisplayName, Symbol, LastValue} = stock \n    const [company, setCompany] = useState({})\n\n    useEffect(() => {\n        let newCompany = {\n            name: DisplayName,\n            symbol: Symbol\n        }\n\n        fetch(\"/companies\", {\n            method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"}, \n            body: JSON.stringify(newCompany)\n        })\n            .then(r => r.json())\n            .then(r => {\n                setCompany(r)\n                \n            })     \n    }, [])\n\n\n    function handleAddStock () {\n        window.alert('Added to Portfolio')\n        let newStock = {\n            name: DisplayName,\n            symbol: Symbol,\n            price: LastValue,\n            company_id: company.id,\n            user_id: currentUser.id\n         }\n                console.log(newStock)\n                fetch(\"/user_stocks\", {\n                    method: \"POST\",\n                    headers: {\"Content-Type\": \"application/json\"}, \n                    body: JSON.stringify(newStock)\n                })\n                .then(r => r.json())\n                .then(r => {\n                    setUserStocks([...userStocks, r])\n                })\n       \n    }\n    \n\n    return(\n        <div>\n            <div>{DisplayName} - {Symbol}</div> \n            <div>{LastValue}</div>\n            <button className=\"button\" onClick={handleAddStock}>Add to Portfolio</button>\n        </div>\n    )\n}\n\nexport default StockCard","import {useEffect, useState} from \"react\"\n\nfunction SearchStockCard ({searchResponse, currentUser, userStocks, setUserStocks}) {\n    const {Name, Symbol, LastPrice} = searchResponse\n    const [newCompany, setNewCompany] = useState({})\n   \n    const noDollarSign = LastPrice?.slice(1)\n\n    const newPrice = noDollarSign?.replaceAll(',','')\n\n    const formattedPrice = parseFloat(newPrice)\n    \n\n    useEffect(() => {\n        let newSearchCompany = {\n            name: Name,\n            symbol: Symbol\n        }\n        \n        fetch(\"/companies\", {\n            method: \"POST\", \n            headers: {\"Content-Type\": \"application/json\"}, \n            body: JSON.stringify(newSearchCompany)\n        })\n            .then(r => r.json())\n            .then(r => {\n                setNewCompany(r)\n                \n            }) \n            console.log(newSearchCompany)\n    }, [])\n\n    function handleAddStock () {\n        window.alert('Added to Portfolio')\n        let newStock = {\n            name: Name,\n            symbol: Symbol,\n            price: formattedPrice,\n            company_id: newCompany.id,\n            user_id: currentUser.id\n        }\n        \n        fetch(\"/user_stocks\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"}, \n            body: JSON.stringify(newStock)\n        })\n        .then(r => r.json())\n        .then(r => {\n            setUserStocks([...userStocks, r])\n        })\n    }\n\n    return(\n        <div>\n            <div>{Name}</div>\n            <div>{Symbol}</div>\n            <div>{LastPrice}</div>\n            {Name ? <button className=\"button\" onClick={handleAddStock}>Add to Portfolio</button> : null }\n        </div>\n    )\n}\n\nexport default SearchStockCard","import { useState } from \"react\"\nimport SearchStockCard from \"./SearchStockCard\";\n\nfunction Query ({currentUser, userStocks, setUserStocks}) {\n    const [search, setSearch] = useState(\"\") \n    const [searchResponse, setSearchResponse] = useState(null)\n   \n    function handleSearchForm (e) {\n        e.preventDefault()\n        fetch(`https://schwab.p.rapidapi.com/quote/get-summary?symbol=${search}`, {\n            method: 'GET',\n            headers: {\n            'X-RapidAPI-Host': 'schwab.p.rapidapi.com',\n            'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n            }\n        })\n            .then(response => response.json())\n            .then(response => setSearchResponse(response.QuoteOutput))\n            .catch(err => console.error(err));\n    }\n    console.log(searchResponse)\n\n    return(\n        <div>\n            <form className=\"form\" onSubmit={handleSearchForm}>\n                <label>Find a stock</label>\n                <input type=\"text\" placeholder=\"Enter a symbol\" onChange={(e) => setSearch(e.target.value)}></input>\n                <input className=\"button\" type=\"submit\" value=\"Search\"></input>\n            </form>\n            {searchResponse ? <SearchStockCard  \n                currentUser={currentUser}\n                userStocks={userStocks}\n                setUserStocks={setUserStocks}\n                searchResponse={searchResponse}/> \n              : null}\n        </div>\n    )\n}\n\nexport default Query","import { useEffect, useState } from \"react\"\nimport StockCard from \"./StockCard\";\nimport Query from \"./Query\"\n\nfunction StockFeed ({currentUser, userStocks, setUserStocks}) {\n    const [stocks, setStocks] = useState([])\n    const [news, setNews] = useState([])\n    \n      useEffect (() => {\n        fetch('https://schwab.p.rapidapi.com/market/get-top-mentions', {\n        method: 'GET', \n        headers: {\n          'X-RapidAPI-Host': 'schwab.p.rapidapi.com',\n          'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n        }})\n          .then(r => r.json())\n          .then(r => setStocks(r.TopMentionsApiData))\n          .catch(err => console.error(err))\n      }, [])\n\n    useEffect (() => {\n      fetch('https://schwab.p.rapidapi.com/news/get-market-update', {\n        method: 'GET', \n        headers: {\n          'X-RapidAPI-Host': 'schwab.p.rapidapi.com',\n          'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n        }})\n      .then(response => response.json())\n      .then(response => setNews(response))\n      .catch(err => console.error(err));\n    }, [])\n     \n    console.log(news)\n\n   const singleStock = stocks?.map((stock) => ( \n   <div className=\"stock-card\">\n     <StockCard \n      currentUser={currentUser} \n      stock={stock} \n      userStocks={userStocks} \n      setUserStocks={setUserStocks}\n     />\n    </div>))\n      \n\n    return (\n        <div className=\"stock-cards-container\">\n            <Query \n              currentUser={currentUser}\n              userStocks={userStocks}\n              setUserStocks={setUserStocks}\n            />\n            <h1>Featured</h1>\n             {singleStock}\n\n              <h1>News</h1>\n              <div className=\"stock-card\">\n                <strong><div>{news.Headline}</div></strong>\n                <div>{news.Timestamp}</div>\n                <div>{news.Teaser}</div> \n              </div>\n        </div>\n    )\n}\n\nexport default StockFeed","import { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nfunction Login ({ error, setError, setCurrentUser }) {\n    const [user, setUser] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const history = useHistory()\n\n    function handleLogin (e) {\n        e.preventDefault()\n\n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: user, password: password})\n        })\n            .then(r => r.json())\n            .then(data => {\n                if (data.error) {\n                    setError(data.error) \n                    e.target.className=\"shake\"\n                    setInterval( function() {e.target.className=\"login-form\"}, 500)\n                } else {\n                    setError(null)\n                    console.log(\"Login Success\")\n                    history.push(\"/\")\n                    setCurrentUser(data)\n                }\n            })\n\n    }\n\n\n    return(\n        <div className=\"login-container\">\n            <div className=\"login-box\">\n                <form onSubmit={handleLogin} className=\"login-form\">\n                    <div className=\"login-input-div\">\n                        <input className=\"login-input\"\n                            onChange={(e) => {setUser(e.target.value)}}\n                            placeholder=\"Enter username\" \n                            type=\"text\" \n                            value={user}\n                        />\n                    </div>\n                    <div className=\"login-input-div\">\n                        <input className=\"login-input\"\n                            onChange={(e) => {setPassword(e.target.value)}}\n                            placeholder=\"Enter password\" \n                            type=\"password\" \n                            value={password}\n                        />\n                    </div>\n                    <div className=\"login-button-div\">\n                        <button className=\"button\" type=\"submit\"> Log in </button>\n                    </div>\n                    <p className=\"error\">{error ? error : null}</p>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","import { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nfunction SignUp ({setCurrentUser}) {\n\n    const [signUpUsername, setSignUpUsername] = useState(\"\")\n    const [signUpEmail, setSignUpEmail] = useState(\"\")\n    const [signUpPassword, setSignUpPassword] = useState(\"\")\n    const [signUpError, setSingUpError] = useState(null)\n\n    const history = useHistory()\n\n    function handleSignUp (e) {\n        e.preventDefault()\n\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username: signUpUsername, password: signUpPassword, email: signUpEmail})\n        })\n        .then(r => r.json())\n        .then(data => {\n            console.log(data.errors)\n            if (data.errors) {\n                setSingUpError(data.errors)\n                e.target.className=\"shake\"\n                setInterval(function() {e.target.className=\"login-form\"}, 500)\n            } else {\n                setSingUpError(null)\n                console.log(\"Signup Success\")\n                history.push(\"/portfolio\")\n                setCurrentUser(data)\n            }\n        })\n    }\n\n    return (\n     <div className=\"login-container\">\n         <div className=\"login-box\">\n             <form onSubmit={handleSignUp} className=\"login-form\">\n                 <div className=\"login-input-div\">\n                     <input className=\"login-input\"\n                         onChange={(e) => {setSignUpUsername(e.target.value)}}\n                         placeholder=\"Enter username\" \n                         type=\"text\" \n                         value={signUpUsername}\n                    />\n                 </div>\n                  <div className=\"login-input-div\">\n                     <input className=\"login-input\"\n                      onChange={(e) => {setSignUpEmail(e.target.value)}}\n                      placeholder=\"Enter email\" \n                      type=\"text\" \n                      value={signUpEmail}\n                     />\n                        </div>\n                 <div className=\"login-input-div\">\n                     <input className=\"login-input\"\n                      onChange={(e) => {setSignUpPassword(e.target.value)}}\n                      placeholder=\"Enter password\" \n                      type=\"password\" \n                      value={signUpPassword}\n                     />\n                        </div>\n                        <div className=\"login-button-div\">\n                            <button className=\"button\" type=\"submit\"> Sign Up </button>\n                 </div>\n                        <p className=\"error\">{signUpError ? signUpError : null}</p>\n            </form>\n         </div>\n      </div>\n    )\n}\n\nexport default SignUp","import { \n    Tooltip,\n    LineChart, \n    Line, \n    CartesianGrid, \n    XAxis, \n    YAxis,\n    Legend\n} from 'recharts';\nimport {useEffect, useState} from \"react\"\n\nfunction Chart ({values2, keys, symbol}) {\n    const [data, setData] = useState([])\n    // console.log(values2)\n    // console.log(keys)\n    \n    \n    useEffect(() => {\n        setData([\n            {\n              date: keys[6],\n              close: values2[6][\"4. close\"],\n              \n            }, \n            {\n              date: keys[5],\n              close: values2[5][\"4. close\"],\n              \n            },\n            {\n              date: keys[4],\n              close: values2[4][\"4. close\"],\n              \n            },\n            {\n              date: keys[3],\n              close: values2[3][\"4. close\"],\n              \n            },\n            {\n              date: keys[2],\n              close: values2[2][\"4. close\"],\n              \n            },\n            {\n              date: keys[1],\n              close: values2[1][\"4. close\"],\n              \n            },\n            {\n              date: keys[0],\n              close: values2[0][\"4. close\"],\n              \n            }\n          ])\n\n    }, [])\n    \n\n    const renderLineChart = (\n      \n        <LineChart width={400} height={400} data={data}>\n          <CartesianGrid  strokeDasharray=\"5 5\"/>\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" />\n        </LineChart>\n        \n      )\n\n      return (\n        <div>\n            {symbol}\n          { renderLineChart }\n        </div>\n      )\n    }\n\n    export default Chart","import Chart from \"./Chart\"\nimport { useEffect, useState } from \"react\"\nimport emailjs from '@emailjs/browser';\n\nfunction UserStockCard ({stock, handleDeleteStock, setUserStocks, userStocks, currentUser}) {\n    const {name, symbol, price, id} = stock\n    \n    const [showChart, setShowChart] = useState(false)\n    const [fetchData, setFetchData] = useState([])\n    const [updatedPrice, setUpdatedPrice] = useState(\"\")\n    const [singleStock, setSingleStock] = useState(null)\n    const [showForm, setShowForm] = useState(false)\n    const [updateError, setUpdateError] = useState(null)\n    const [values, setValues] = useState([])\n    const [keys, setKeys] = useState([])\n    const [currentPrice, setCurrentPrice] = useState(null)\n    \n\n    useEffect(() => {\n        fetch(`/user_stocks/${id}`)\n            .then(r => r.json())\n            .then(r => setSingleStock(r))\n    }, [])\n  \n    \n    function handleDelete () {\n        fetch(`/user_stocks/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(r => {\n           handleDeleteStock(id)\n        })\n    }\n\n    function handleEditFormSubmit (e) {\n        e.preventDefault()\n\n        const updatedStock = {\n            name: name,\n            symbol: symbol,\n            price: updatedPrice,\n            company_id: singleStock?.company.id,\n            user_id: singleStock?.user.id\n        }\n\n        fetch(`/user_stocks/${id}`, {\n            method: \"PATCH\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(updatedStock)\n        })\n            .then(r => r.json())\n            .then(r => {\n                if (r.errors) {\n                    setUpdateError(r.errors)\n                } else {\n                    const updatedStocks = userStocks.map((stock) => {\n                        if (stock.id === r.id) {\n                            return r\n                        } else {\n                            return stock\n                        }\n                    })\n                    setUserStocks(updatedStocks)\n                    setUpdateError(null)\n                    setUpdatedPrice(\"\")\n                    setShowForm(false)\n                }\n            })\n    }\n\n    function handleShowChart () {\n        setShowChart(true)\n        if (!showChart) {\n            fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${process.env.REACT_APP_API_KEY}`, {\n            method: 'GET',\n            headers: {'User-Agent': 'request'}\n        })\n            .then(r => r.json())\n            .then(r => { \n                if (r[\"Time Series (Daily)\"]) {\n                    console.log(\"response\", r[\"Time Series (Daily)\"])\n                    setFetchData(r[\"Time Series (Daily)\"])\n                    const objValues = Object?.values(r[\"Time Series (Daily)\"]) \n                    setValues(Object?.values(objValues))\n                    setKeys(Object?.keys(r[\"Time Series (Daily)\"]))\n                }\n            })\n        }\n        setShowChart(!showChart)\n    }\n\n    function handleShowForm() {\n        setShowForm(!showForm)\n    }\n    \n\n    function renderChart() {\n        return (\n            <Chart\n                symbol={symbol}\n                keys={keys} \n                values2={values} />\n        )\n    }\n\n    useEffect (() => {\n        fetch(`https://schwab.p.rapidapi.com/quote/get-summary?symbol=${symbol}`, {\n                    method: 'GET',\n                    headers: {\n                    'X-RapidAPI-Host': 'schwab.p.rapidapi.com',\n                    'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n                    }\n                })\n                    .then(response => response.json())\n                    .then(response => {\n                        const noDollarSign = response.QuoteOutput.LastPrice?.slice(1)\n                        const newPrice = noDollarSign?.replaceAll(',','')\n                        const formattedPrice = parseFloat(newPrice)\n                        setCurrentPrice(formattedPrice)\n                    })\n                    .catch(err => console.error(err));\n        }, [])\n\n       \n        const performanceOverTime = currentPrice - price \n\n        let templateParams = {\n            to_name: currentUser?.username,\n            email: currentUser?.email,\n            name: name,\n            symbol: symbol, \n            price: price,\n            performance: performanceOverTime\n        }\n\n        function handleSendMePerformance() {\n            emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, process.env.REACT_APP_PUBLIC_KEY)\n                .then((result) => {\n                    alert(\"Message Sent, We will get back to you shortly\", result.text)\n                    console.log(result)\n            },\n                (error) => {\n                    alert(\"An error occurred, Please try again\", error.text);\n                    console.log(error)\n                })\n    \n        } \n    \n\n    return(\n        <div>\n            <div>Name: {symbol} - {name} </div>\n            <div>Initial Purchasing Price: ${price}</div>\n            <div>Price Change Since Purchase: $ {performanceOverTime.toFixed(2)}</div>\n            <button className=\"button\" onClick={handleDelete}>Delete Stock</button>\n            <div></div>\n            <button className=\"button\" onClick={handleShowChart}>Show Weekly Prices</button>\n            <div></div>\n            <button className=\"button\" onClick={handleShowForm}>Update Initial Price</button>\n\n            { showForm ? \n                <form  onSubmit={handleEditFormSubmit}>\n                    Update Purchase Price:\n                    <input onChange={(e) => setUpdatedPrice(e.target.value)} defaultValue=\"Price\" type=\"text\" />\n                    <input className=\"button\" type=\"submit\" value=\"Update\" />\n                </form> : null}\n                <div></div>\n            <p className=\"error\">{updateError ? updateError : null}</p>\n\n            {values.length > 0 && keys.length > 0 && showChart ? renderChart() : null}\n\n            <button className=\"button\" onClick={handleSendMePerformance}>Email Me Stock Performance</button>\n            \n        </div>\n    )\n}\n\nexport default UserStockCard","import { useEffect, useState } from \"react\"\nimport UserStockCard from \"./UserStockCard\"\nimport { useHistory } from \"react-router-dom\"\nimport emailjs from '@emailjs/browser';\n\n\n\nfunction UserPortfolio ({userStocks, setUserStocks, error, setError}) {\n    const [currentUser, setCurrentUser] = useState({})\n    \n   let history = useHistory() \n\n    useEffect(() => {\n        fetch(\"/current_user\")\n        .then(r => r.json())\n        .then(user => {\n            if (!user.error) {\n                setUserStocks(user.user_stocks)\n                setCurrentUser(user)\n            } else {\n                history.push(\"/login\")\n            }\n\n        })\n    }, [])\n    \n    function handleDeleteStock (id) {\n        const updatedStocks = userStocks.filter(stock => stock.id !== id)\n        setUserStocks(updatedStocks)\n    }\n\n\n    return (\n        <div className=\"stock-cards-container\">\n\n            <h1>My Portfolio</h1>\n    \n            {userStocks?.map((stock) => (\n                <div className=\"stock-card\">\n                    <UserStockCard \n                        stock={stock} \n                        handleDeleteStock={handleDeleteStock}\n                        error={error} \n                        setError={setError}\n                        setUserStocks={setUserStocks}\n                        userStocks={userStocks}\n                        currentUser={currentUser}\n                    /> \n                </div>)\n            )}\n        </div>\n    )\n}\n\nexport default UserPortfolio","import { NavLink, useHistory } from \"react-router-dom\"\n\nfunction Navbar ({ currentUser, setCurrentUser }) {\n\n    // useEffect(() => {\n    //     fetch(\"/current_user\")\n    //     .then(r => r.json())\n    //     .then(data => {\n    //         data ? setCurrentUser(data) : console.log(\"No login registered\")\n    //     })\n    // }, []) \n\n    let history = useHistory()\n\n    function handleLogout() {\n        fetch('/logout', {\n            method: \"DELETE\"\n        })\n        .then(r => {\n            if (r.ok) {\n                history.push(\"/login\")\n                setCurrentUser(null)\n            }\n        })\n    }\n\n    function checkUser () {\n        return currentUser && !currentUser.error\n    }\n\n    function pleaseLoginMessage () {\n        if (!currentUser) {\n            window.alert(\"Please login to access site\")\n        }\n    }\n\n    console.log(currentUser)\n\n    return (\n        <div className=\"navbar\">\n            <div className=\"nav-left\">\n                <NavLink to={checkUser() ? \"/\" : \"/login\"} className=\"nav-link\">\n                    <h2 className=\"navbar-item\" onClick={pleaseLoginMessage}>\n                        Featured\n                    </h2>\n                </NavLink>\n            </div>\n            <div className=\"nav-right\">\n                {checkUser() ? <h2 className=\"navbar-item\"> Hi, {currentUser.username}! </h2> : \n                    <>\n                        <NavLink to=\"/login\" className=\"nav-link\">\n                            <h2 className=\"navbar-item\">Login</h2>\n                        </NavLink>\n                        <NavLink to=\"/signup\" className=\"nav-link\">\n                            <h2 className=\"navbar-item\">Sign Up</h2>\n                        </NavLink> \n                    </>}\n                {checkUser() ? \n                    <NavLink to={checkUser() ? \"/portfolio\" : \"/login\"} className=\"nav-link\">\n                        {checkUser() ? <h2 className=\"navbar-item\">My Portfolio</h2> : null}\n                    </NavLink> : null }\n                    { checkUser() ? \n                    <NavLink to={checkUser() ? \"/mycompanies\" : \"/login\"} className=\"nav-link\">\n                        {checkUser() ? <h2 className=\"navbar-item\">My Companies</h2> : null}\n                    </NavLink> : null }\n                {checkUser() ? \n                    <h2 className=\"navbar-item\" onClick={handleLogout}>Logout</h2> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","import {useEffect, useState} from \"react\"\n\nfunction CompaniesCard ({company}) {\n    const { name, symbol } = company\n    const [quoteNews, setQuoteNews] = useState(null)\n    const [showSummary, setShowSummary] = useState(false)\n    const [showCompanyNews, setShowCompanyNews] = useState(false)\n\n    useEffect (() => {\n        fetch(`https://schwab.p.rapidapi.com/quote/get-summary?symbol=${symbol}`, {\n                method: 'GET',\n                headers: {\n                'X-RapidAPI-Host': 'schwab.p.rapidapi.com',\n                'X-RapidAPI-Key': process.env.REACT_APP_API_KEY\n                }\n            })\n                .then(response => response.json())\n                .then(response => setQuoteNews(response))\n                .catch(err => console.error(err));\n    }, [])\n\n    return (\n        <div>\n            <strong>\n                <div>{name}</div>\n                <div>{symbol}</div>\n            </strong>\n\n            <button className=\"button\" onClick={() => setShowSummary(!showSummary)}>{showSummary ? \"Hide Business Summary\" : \"Show Business Summary\"}</button>\n\n            {showSummary ? <div>{quoteNews?.CompanyOverviewOutput.BusinessSummary}</div> : null}\n            <div></div>\n\n            <button className=\"button\" onClick={() => setShowCompanyNews(!showCompanyNews)}>{ showCompanyNews ? \"Hide Company News Summary\" : \"Show Company News Summary\" }</button>\n            \n            \n\n            {showCompanyNews ? \n                <>\n                    <div><strong>{quoteNews?.StocksNewsOutput.Stories[1].Headline}</strong></div>\n                    <div>{quoteNews?.StocksNewsOutput.Stories[1].Teaser}</div>\n                    <div></div>\n                    <div><strong>{quoteNews?.StocksNewsOutput.Stories[0].Headline}</strong></div>\n                    <div>{quoteNews?.StocksNewsOutput.Stories[0].Teaser}</div>\n\n                </>\n                 : null\n            }\n\n        </div>\n    )\n}\n\nexport default CompaniesCard","import { useEffect, useState } from \"react\"\nimport CompaniesCard from \"./CompaniesCard\"\nimport { useHistory } from \"react-router-dom\"\n \nfunction MyCompaniesPage () {\n    const [userCompanies, setUserCompanies] = useState([])\n\n    let history= useHistory() \n\n    useEffect(() => {\n        fetch(\"/current_user\")\n        .then(r => r.json())\n        .then(user => {\n            if (!user.error) {\n                setUserCompanies(user.companies)\n            } else {\n                history.push(\"/login\")\n            }\n        })\n    }, [])\n\n    console.log(userCompanies)\n\n    \n    \n    //remove duplicates ??\n\n    const singleCompany = userCompanies?.map((company) => <div className=\"stock-card\"><CompaniesCard company={company}/></div>)\n\n    return (\n\n        <div className=\"stock-cards-container\">\n             {singleCompany}\n        </div>\n\n    )\n}\n\nexport default MyCompaniesPage","// import logo from './logo.svg';\nimport '../App.css';\nimport { useState, useEffect } from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport StockFeed from './StockFeed'\nimport Login from './Login'\nimport SignUp from \"./SignUp\"\nimport UserPortfolio from \"./UserPortfolio\"\nimport Navbar from \"./Navbar\"\nimport MyCompaniesPage from \"./MyCompaniesPage\"\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [error, setError] = useState(null)\n  const [userStocks, setUserStocks] = useState([])\n\n\n  useEffect (() => {\n    fetch(\"/current_user\")\n    .then(r => r.json())\n    .then(data => {\n      \n      data ? setCurrentUser(data) : setCurrentUser(null)\n  }) \n}, [])\n\n  \n\n  useEffect(() => {\n      fetch(\"/current_user\")\n      .then(r => r.json())\n      .then(user => setUserStocks(user.user_stocks))\n  }, [])\n  \n\n  return (\n    <div className=\"App\">\n      <Navbar \n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser} \n      />\n     <Switch>\n       <Route exact path=\"/\">\n         <StockFeed currentUser={currentUser} userStocks={userStocks} setUserStocks={setUserStocks}/>\n       </Route>\n       <Route exact path={currentUser ? \"/portfolio\" : \"login\"}>\n         <UserPortfolio error={error} setError={setError} userStocks={userStocks} setUserStocks={setUserStocks}/>\n       </Route>\n       <Route exact path=\"/login\">\n        <Login error={error} setError={setError} setCurrentUser={setCurrentUser} /> \n       </Route>\n       <Route exact path=\"/signup\">\n        <SignUp error={error} setError={setError} setCurrentUser={setCurrentUser} /> \n       </Route>\n       <Route>\n        <MyCompaniesPage exact path=\"/mycompanies\"/>\n       </Route>\n     </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}