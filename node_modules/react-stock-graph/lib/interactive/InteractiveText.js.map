{"version":3,"sources":["../../../src/lib/interactive/InteractiveText.js"],"names":["InteractiveText","props","handleDraw","bind","handleDrag","handleDragComplete","terminate","saveNodeType","getSelectionState","nodes","state","index","position","setState","override","moreProps","textList","newTextList","map","each","idx","selected","onDragComplete","xyValue","current","start","end","e","enabled","mouseXY","mouseY","yScale","chartConfig","xAccessor","currentItem","invert","defaultText","onChoosePosition","newText","noop","getMouseCanvas","Component","propTypes","PropTypes","func","isRequired","onSelect","shape","bgFill","string","bgOpacity","number","textFill","fontFamily","fontWeight","fontStyle","fontSize","text","hoverText","object","array","bool","defaultProps","HoverTextNearMouse","enable","bgHeight","bgWidth","contextTypes","subscribe","unsubscribe","generateSubscriptionId","chartId","oneOfType"],"mappings":"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","file":"InteractiveText.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, noop } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\nimport EachText from \"./wrapper/EachText\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleDraw = this.handleDraw.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\t\tthis.terminate = terminate.bind(this);\n\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"textList\")\n\t\t\t.bind(this);\n\n\t\tthis.nodes = [];\n\t\tthis.state = {};\n\t}\n\thandleDrag(index, position) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t}\n\t\t});\n\t}\n\thandleDragComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { textList } = this.props;\n\t\t\tconst newTextList = textList\n\t\t\t\t.map((each, idx) => {\n\t\t\t\t\tconst selected = (idx === override.index);\n\t\t\t\t\treturn selected\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tposition: override.position,\n\t\t\t\t\t\t\tselected,\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onDragComplete(newTextList, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleDraw(moreProps, e) {\n\t\tconst { enabled } = this.props;\n\t\tif (enabled) {\n\t\t\tconst {\n\t\t\t\tmouseXY: [, mouseY],\n\t\t\t\tchartConfig: { yScale },\n\t\t\t\txAccessor,\n\t\t\t\tcurrentItem,\n\t\t\t} = moreProps;\n\n\t\t\tconst xyValue = [xAccessor(currentItem), yScale.invert(mouseY)];\n\n\t\t\tconst { defaultText, onChoosePosition } = this.props;\n\n\t\t\tconst newText = {\n\t\t\t\t...defaultText,\n\t\t\t\tposition: xyValue,\n\t\t\t};\n\t\t\tonChoosePosition(newText, moreProps, e);\n\t\t}/*  else {\n\t\t\tthis.handleClick(moreProps, e);\n\t\t} */\n\t}\n\trender() {\n\t\tconst { textList, defaultText } = this.props;\n\t\tconst { override } = this.state;\n\t\treturn <g>\n\t\t\t{textList.map((each, idx) => {\n\t\t\t\tconst props = {\n\t\t\t\t\t...defaultText,\n\t\t\t\t\t...each,\n\t\t\t\t};\n\t\t\t\treturn <EachText key={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\t{...props}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tposition={getValueFromOverride(override, idx, \"position\", each.position)}\n\n\t\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t<GenericChartComponent\n\n\t\t\t\tonClick={this.handleDraw}\n\n\t\t\t\tsvgDraw={noop}\n\t\t\t\tcanvasDraw={noop}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\"]}\n\t\t\t/>;\n\t\t</g>;\n\t}\n}\n\nInteractiveText.propTypes = {\n\tonChoosePosition: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\n\tdefaultText: PropTypes.shape({\n\t\tbgFill: PropTypes.string.isRequired,\n\t\tbgOpacity: PropTypes.number.isRequired,\n\t\ttextFill: PropTypes.string.isRequired,\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontWeight: PropTypes.string.isRequired,\n\t\tfontStyle: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\ttext: PropTypes.string.isRequired,\n\t}).isRequired,\n\n\thoverText: PropTypes.object.isRequired,\n\ttextList: PropTypes.array.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonChoosePosition: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\n\tdefaultText: {\n\t\tbgFill: \"#D3D3D3\",\n\t\tbgOpacity: 1,\n\t\ttextFill: \"#F10040\",\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 12,\n\t\tfontStyle: \"normal\",\n\t\tfontWeight: \"normal\",\n\t\ttext: \"Lorem ipsum...\"\n\t},\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: 18,\n\t\tbgWidth: 175,\n\t\ttext: \"Click and drag the edge circles\",\n\t},\n\ttextList: [],\n};\n\nInteractiveText.contextTypes = {\n\tsubscribe: PropTypes.func.isRequired,\n\tunsubscribe: PropTypes.func.isRequired,\n\tgenerateSubscriptionId: PropTypes.func.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default InteractiveText;\n"]}